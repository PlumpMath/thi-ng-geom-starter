-*- mode: org; mode: visual-line; cider-buffer-ns: "thi-ng-geom-starter.canvas" -*-
#+STARTUP: indent
#+PROPERTY: header-args:clojure  :tangle canvas.cljs
#+PROPERTY: header-args:clojure+ :results value verbatim replace

* Contents                                                          :TOC_2_org:
 - [[Implementation][Implementation]]

* Implementation

Lifted initially from [[https://medium.com/@thi.ng/workshop-report-hi-perf-clojurescript-with-webgl-asm-js-and-emscripten-a545cca083bc][the workshop write-up]]. (Gist [[https://gist.github.com/postspectacular/9de41cb7d9d6c4f264715b7d2fc966c0][here]].) We've added a callback for ~:component-did-update~ to deal with resizing.

#+BEGIN_SRC clojure
  (ns thi-ng-geom-starter.canvas
    (:require [thi.ng.geom.gl.webgl.animator :as anim]
              [thi-ng-geom-starter.main :as main]
              [reagent.core :as reagent])
    (:require-macros [cljs-log.core :refer [debug info warn severe]]))
#+END_SRC

#+RESULTS:
: nil

Dedicated Reagent atom purely for triggering re-renders on resize:

#+BEGIN_SRC clojure
  (def window-size (reagent/atom nil))
#+END_SRC

#+RESULTS:
: #'thi-ng-geom-starter.canvas/window-size

Window resize event handler (see [[file:core.org][core]]):

#+BEGIN_SRC clojure
  (defn on-window-resize [evt]
    (reset! window-size {:w (.-innerWidth js/window)
                         :h (.-innerHeight js/window)}))
#+END_SRC

#+RESULTS:
: #'thi-ng-geom-starter.canvas/on-window-resize

Reagent component. The render function has a watch on ~window-size~ to rebuild the view port.

#+BEGIN_SRC clojure
  (defn canvas-component
    [props]
    (reagent/create-class
     {:component-did-mount
      (fn [this]
        (reagent/set-state this {:active true})
        ((:init props) this)
        (anim/animate ((:loop props) this)))

      :component-did-update
      (fn [this]
        (debug "UPDATE")
        (swap! main/app main/rebuild-viewport)
        )

      :component-will-unmount
      (fn [this]
        (debug "UNMOUNT")
        (reagent/set-state this {:active false}))

      :reagent-render
      (fn [_]
        @window-size
        [:canvas#main
         (merge
          {:width (.-innerWidth js/window)
           :height (.-innerHeight js/window)}
          props)])}))
#+END_SRC

#+RESULTS:
: #'thi-ng-geom-starter.canvas/canvas-component
